-------------------------------------------------------- AULA 3 --------------------------------------------------------

CREATE DATABASE ESQUINA_VENDAS_R

USE ESQUINA_VENDAS_R

CREATE TABLE [TABELA DE CLIENTES]
(
	[CPF][VARCHAR] (11),
	[NOME] [VARCHAR] (100),
	[ENDERECO] [VARCHAR] (150),
	[COMPLEMENTO] [VARCHAR] (100),
	[BAIRRO] [VARCHAR] (50),
	[CIDADE] [VARCHAR] (50),
	[ESTADO] [VARCHAR] (2),
	[CEP] [VARCHAR] (8),
	[DATA DE NASCIMENTO] [DATE],
	[IDADE] [SMALLINT],
	[SEXO] [VARCHAR] (1),
	[LIMITE DE CREDITO] [MONEY],
	[VOLUME DE COMPRA] [FLOAT],
	[PRIMEIRA COMPRA] [BIT]
)

--DESAFIO
/* Nosso sistema de vendas tem mais uma tabela a ser criada, a de vendedores.

Algumas informações:

• Nome da tabela deve ser [TABELA DE VENDEDORES]
• O vendedor tem como chave o número interno da matrícula (nome do campo [MATRICULA]), que deve ser
uma string de 5 posições.
• O nome do vendedor (nome do campo [NOME]) deve ser uma string de 100 posições.
• Percentual de comissão (nome do campo [PERCENTUAL COMISSÃO]) representa o percentual de comissão
que o vendedor ganha sobre cada venda.

Crie esta tabela no banco de dados [ESQUINA_VENDAS]
*/

CREATE TABLE [TABELA DE VENDEDORES]
(
	MATRICULA VARCHAR(5),
	NOME VARCHAR(100),
	[PERCENTUAL COMISSÃO] FLOAT 
)

CREATE TABLE [TABELA DE PRODUTOS]
(
	[CODIGO DO PRODUTO] VARCHAR(10),
	[NOME DO PRODUTO] VARCHAR(50),
	EMBALAGEM VARCHAR(20),
	TAMANHO VARCHAR(10),
	SABOR VARCHAR(20),
	[PREÇO DE LISTA] SMALLMONEY
)




-------------------------------------------------------- AULA 4 --------------------------------------------------------

INSERT INTO [TABELA DE PRODUTOS]
([CODIGO DO PRODUTO], [NOME DO PRODUTO], [EMBALAGEM],[TAMANHO], [SABOR], [PREÇO DE LISTA])
VALUES('788975', 'Pedaços de Frutas - 1,5 Litros - Maça', 'PET', '1,5 Litros', 'Maça', 18.01)

SELECT * FROM [TABELA DE PRODUTOS]

INSERT INTO [TABELA DE PRODUTOS]
([CODIGO DO PRODUTO],[NOME DO PRODUTO],[EMBALAGEM],[TAMANHO],[SABOR], [PREÇO DE LISTA])
VALUES ('1040107','Light - 350 ml - Melancia','Lata','350 ml','Melancia',4.56)

SELECT * FROM [TABELA DE PRODUTOS]

INSERT INTO [TABELA DE VENDEDORES]
(MATRICULA, NOME, [PERCENTUAL COMISSÃO])
VALUES ('00122', 'Joabe da Silva Freitas', 0.1)

SELECT * FROM [TABELA DE VENDEDORES]

INSERT INTO [TABELA DE VENDEDORES]
VALUES ('00133', 'Marly dos Santos Gama', 0.08),
	   ('00144', 'Bruno César Brandão', 0.05)

SELECT * FROM [TABELA DE VENDEDORES]

INSERT INTO [TABELA DE VENDEDORES]
VALUES ('00155', 'Roberta Martins', 0.11),
	   ('00166', 'Pericles Alves', 0.07)

SELECT * FROM [TABELA DE VENDEDORES]

INSERT INTO [TABELA DE PRODUTOS]
([CODIGO DO PRODUTO], [NOME DO PRODUTO], [EMBALAGEM], [TAMANHO], [SABOR], [PREÇO DE LISTA])
VALUES ('544931', 'Frescor do Verão - 350 ml - Limão', 'PET', '350 ml','Limão',3.20)

INSERT INTO [TABELA DE PRODUTOS]
([CODIGO DO PRODUTO], [NOME DO PRODUTO], [EMBALAGEM], [TAMANHO], [SABOR], [PREÇO DE LISTA])
VALUES ('1078680', 'Frescor do Verão - 470 ml - Manga', 'Lata', '470 ml','Manga',5.18)

SELECT * FROM [TABELA DE PRODUTOS]

UPDATE [TABELA DE PRODUTOS]
SET [EMBALAGEM] = 'Lata',
	[PREÇO DE LISTA] = 2.46
WHERE [CODIGO DO PRODUTO] = '544931'

UPDATE [TABELA DE PRODUTOS]
SET [EMBALAGEM] = 'Garrafa'
WHERE [CODIGO DO PRODUTO] = '1078680'

/* DESAFIO
Pericles Alves (matrícula 00166) recebeu aumento e sua comissão passou a
ser de 11%.
Roberta Martins (matrícula 00155) reclamou que seu nome real é Roberta
Serra.

Efetue estas correções na base de dados.
*/

SELECT * FROM [TABELA DE VENDEDORES]

UPDATE [TABELA DE VENDEDORES]
SET [PERCENTUAL COMISSÃO] = 0.11 WHERE MATRICULA = '00166'

UPDATE [TABELA DE VENDEDORES]
SET	[NOME] = 'Roberta Serra' WHERE MATRICULA = '00155'

SELECT * FROM [TABELA DE VENDEDORES]

/* DESAFIO
Joabe da Silva Freitas (matrícula 00122) foi demitido. Retire-o da tabela de vendedores.
*/

DELETE FROM [TABELA DE VENDEDORES]
WHERE MATRICULA = '00122'

SELECT * FROM [TABELA DE VENDEDORES]




-------------------------------------------------------- AULA 5 --------------------------------------------------------

INSERT INTO [TABELA DE PRODUTOS]
([CODIGO DO PRODUTO], [NOME DO PRODUTO],[EMBALAGEM],[TAMANHO],[SABOR],[PREÇO DE LISTA])
VALUES ('788975', 'Pedaços de Frutas - 1,5 Litros - Maça', 'PET', '1,5 Litros', 'Maça', 18.01)

SELECT * FROM [dbo].[TABELA DE PRODUTOS]

DROP TABLE [dbo].[TABELA DE PRODUTOS]

CREATE TABLE [TABELA DE PRODUTOS]
(
	[CODIGO DO PRODUTO] [VARCHAR](10),
	[NOME DO PRODUTO][VARCHAR](50),
	[EMBALAGEM][VARCHAR](20),
	[TAMANHO][VARCHAR](10),
	[SABOR][VARCHAR](20),
	[PREÇO DE LISTA][SMALLMONEY],
	PRIMARY KEY ([CODIGO DO PRODUTO])
)

DROP TABLE [TABELA DE CLIENTES]

CREATE TABLE [TABELA DE CLIENTES]
( 
	[CPF] [VARCHAR] (11) ,
	[NOME] [VARCHAR] (100) ,
	[ENDERECO 1] [VARCHAR] (150) ,
	[ENDERECO 2] [VARCHAR] (150) ,
	[BAIRRO] [VARCHAR] (50) ,
	[CIDADE] [VARCHAR] (50) ,
	[ESTADO] [VARCHAR] (2) ,
	[CEP] [VARCHAR] (8) ,
	[DATA DE NASCIMENTO] [DATE],
	[IDADE] [SMALLINT],
	[SEXO] [VARCHAR] (1) ,
	[LIMITE DE CREDITO] [MONEY] ,
	[VOLUME DE COMPRA] [FLOAT] ,
	[PRIMEIRA COMPRA] [BIT],
	PRIMARY KEY ([CPF])
)

SELECT * FROM [TABELA DE CLIENTES]

INSERT INTO [TABELA DE CLIENTES]
(	[CPF],
	[NOME],
	[ENDERECO 1],
	[ENDERECO 2],
	[BAIRRO],
	[CIDADE],
	[ESTADO],
	[CEP],
	[DATA DE NASCIMENTO],
	[IDADE],
	[SEXO],
	[LIMITE DE CREDITO],
	[VOLUME DE COMPRA],
	[PRIMEIRA COMPRA])
VALUES
(
	'19290992743',
	'Fernando Cavalcante',
	'R. Dois de Fevereiro',
	'',
	'Água Santa',
	'Rio de Janeiro',
	'RJ',
	'22000000',
	'2000-02-12',
	18,
	'M',
	100000,
	200000,
	1
)

/* DESAFIO
Vamos incluir novos campos na tabela de vendedores. Eles serão a data de admissão (nome do
campo DATA ADMISSÃO) e se o vendedor está ou não de férias (nome do campo DE FÉRIAS).

• Exclui a tabela de vendedores
• Criar a tabela de vendedores com a chave primária
• Inserir todos os vendedores com os dados atualizados
• Menos o Joabe que foi demitido rss

Matrícula: 00133
Nome: Marly dos Santos Gama
Comissão: 8%
Data de admissão: 15/08/2014
Está de férias? Não

Matrícula: 00144
Nome: Bruno César Brandão
Comissão: 5%
Data de admissão: 15/08/2016
Está de férias? Sim

Matrícula: 00155
Nome: Roberta Serra
Comissão: 11%
Data de admissão: 15/08/2018
Está de férias? Não

Matrícula: 00166
Nome: Pericles Alves
Comissão: 11%
Data de admissão: 15/08/2019
Está de férias? Sim

*/

SELECT * FROM [TABELA DE VENDEDORES]

DROP TABLE [TABELA DE VENDEDORES]

CREATE TABLE [TABELA DE VENDEDORES]
(	
	[MATRICULA] varchar(5),
	[NOME] varchar(100),
	[PERCENTUAL COMISSÃO] float,
	[DATA DE ADMISSÃO][DATE],
	[FERIAS][BIT]
	PRIMARY KEY ([MATRICULA])
)

INSERT INTO [TABELA DE VENDEDORES]
([MATRICULA], [NOME], [PERCENTUAL COMISSÃO],[DATA DE ADMISSÃO],[FERIAS])
VALUES ('00133','Marly dos Santos Gama',0.08,'15/08/2014',0),
	   ('00144','Bruno César Brandão',0.05,'15/08/2016',1),
	   ('00155','Roberta Serra',0.11,'15/08/2018',0),
	   ('00166','Pericles Alves',0.11,'15/08/2019',1)

SELECT * FROM [TABELA DE VENDEDORES]





-------------------------------------------------------- AULA 6 --------------------------------------------------------

/* Desafio
• Selecione o nome e a matrícula dos vendedores.
• Selecione o nome, código e o preço de lista dos produtos onde:
	Nome → Descrição do produto, Código → Identificador, Preço de lista → Preço a pagar
• Selecione o nome, CPF e a cidade dos clientes listando somente 7 registros.
*/

SELECT NOME, MATRICULA FROM [TABELA DE VENDEDORES]

SELECT [NOME DO PRODUTO] AS 'DESCRIÇÃO DO PRODUTO', [CODIGO DO PRODUTO] AS ' IDENTIFICADOR', [PREÇO DE LISTA] AS 'PREÇO A PAGAR'
FROM [TABELA DE PRODUTOS]

SELECT * FROM [TABELA DE CLIENTES]
SELECT TOP(7) NOME, CPF, CIDADE FROM [TABELA DE CLIENTES]

/* Desafio
Verifique os dados cadastrais da vendedora Roberta Serra e verifique se ela está
de férias.
*/

SELECT * FROM [TABELA DE VENDEDORES]
WHERE MATRICULA = '00155'

/* Desafio
Veja quais são os vendedores que possuem comissão maior que 10%.
*/

SELECT * FROM [TABELA DE VENDEDORES]
WHERE [PERCENTUAL COMISSÃO] > 0.1

/* Desafio
Veja quais são os vendedores que foram admitidos na empresa depois de 2016
(inclusive).
*/

SELECT * FROM [TABELA DE VENDEDORES]
WHERE YEAR([DATA DE ADMISSÃO]) >= 2016

-- CHAVE ESTRANGEIRA
/*
	FOREIGN KEY (COLUNA)
	REFERENCES [TABELA DE REFERÊNCIA QUE É CHAVE PRIMÁRIA] (COLUNA DA TABELA REFERENCIADA)
*/

-- DESAFIO MASTER

CREATE DATABASE [ESQUINA_VENDAS_R2]

USE ESQUINA_VENDAS_R2

CREATE TABLE [TABELA DE CLIENTES]
(
	[CPF] [VARCHAR](11) ,
	[NOME] [VARCHAR](100) ,
	[ENDERECO] [VARCHAR](150) ,
	[COMPLEMENTO] [VARCHAR](150) ,
	[BAIRRO] [VARCHAR](50) ,
	[CIDADE] [VARCHAR](50) ,
	[ESTADO] [VARCHAR](2) ,
	[CEP] [VARCHAR](8) ,
	[DATA DE NASCIMENTO] [DATE] ,
	[IDADE] [SMALLINT ] ,
	[SEXO] [VARCHAR](1) ,
	[LIMITE DE CREDITO] [MONEY] ,
	[VOLUME DE COMPRA] [FLOAT] ,
	[PRIMEIRA COMPRA] [BIT] ,
	PRIMARY KEY ([CPF])
)

CREATE TABLE [TABELA DE PRODUTOS]
(
	[CODIGO DO PRODUTO] [VARCHAR](10),
	[NOME DO PRODUTO] [VARCHAR](50),
	[EMBALAGEM] [VARCHAR](20),
	[TAMANHO] [VARCHAR](10),
	[SABOR] [VARCHAR](20),
	[PRECO DE LISTA] [SMALLMONEY],

	PRIMARY KEY ([CODIGO DO PRODUTO])
)

CREATE TABLE [TABELA DE VENDEDORES]
( 
	[MATRICULA] [VARCHAR](5),
	[NOME] [VARCHAR](100),
	[PERCENTUAL COMISSAO] [FLOAT],
	[DATA DE ADMISSAO][DATE],
	[FERIAS][BIT],

	PRIMARY KEY ([MATRICULA])
)


CREATE TABLE [TABELA DE NOTAS FISCAIS]
(
	[CPF] [VARCHAR] (11) NOT NULL,
	[MATRICULA] [VARCHAR](5) NOT NULL,
	[DATA] [DATE],
	[NUMERO][VARCHAR](6),
	[IMPOSTO][FLOAT],

	PRIMARY KEY ([NUMERO]),
	FOREIGN KEY ([CPF]) REFERENCES [TABELA DE CLIENTES] ([CPF]),
	FOREIGN KEY ([MATRICULA]) REFERENCES [TABELA DE VENDEDORES] ([MATRICULA])
)


CREATE TABLE [TABELA DE ITENS NOTAS FISCAIS]
(
	[NUMERO] [VARCHAR](6) NOT NULL,
	[CODIGO DO PRODUTO] [VARCHAR] (10) NOT NULL,
	[QUANTIDADE][INT],
	[PRECO][FLOAT],

	PRIMARY KEY([NUMERO],[CODIGO DO PRODUTO]),
	FOREIGN KEY ([NUMERO]) REFERENCES [TABELA DE NOTAS FISCAIS] ([NUMERO]),
	FOREIGN KEY ([CODIGO DO PRODUTO]) REFERENCES [TABELA DE PRODUTOS] ([CODIGO DO PRODUTO])
)





-------------------------------------------------------- AULA 7 --------------------------------------------------------

/* Desafio
Selecionar todos os itens de notas fiscais cuja quantidade seja maior que 60 e
preço seja menor ou igual a 3.
	OBS: Utilizar o arquivo de backup '008-ESQUINA_VENDAS.bak'
*/
USE ESQUINA_VENDAS

SELECT * FROM [TABELA DE ITENS NOTAS FISCAIS] --213.364 registros

SELECT * FROM [TABELA DE ITENS NOTAS FISCAIS]
WHERE QUANTIDADE > 60 AND PREÇO <= 3 --1932 registros

--FILTRO USANDO	'LIKE'
SELECT * FROM [TABELA DE CLIENTES] --15 linhas

SELECT * FROM [TABELA DE CLIENTES]
WHERE NOME LIKE '%César%'




--------------------------------------------------------------- AULA 8 -------------------------------------------------------------------------
--USANDO O DISTINCT
SELECT * FROM [TABELA DE PRODUTOS]

SELECT DISTINCT SABOR, TAMANHO FROM [TABELA DE PRODUTOS]
ORDER BY SABOR, TAMANHO ASC

SELECT DISTINCT SABOR, EMBALAGEM FROM [TABELA DE PRODUTOS]

SELECT DISTINCT EMBALAGEM FROM [TABELA DE PRODUTOS]

--DESAFIO: Quantos bairros diferentes da cidade do Rio de Janeiro possuem clientes?

SELECT * FROM [TABELA DE CLIENTES]

SELECT DISTINCT BAIRRO FROM [TABELA DE CLIENTES]
WHERE CIDADE = 'Rio de Janeiro' --7 registros

--DESAFIO: Queremos obter as 10 primeiras vendas do dia 01/01/2017. Qual seria o comando SQL para obter este resultado?
SELECT * FROM [TABELA DE NOTAS FISCAIS]
ORDER BY NUMERO

SELECT TOP 10 * FROM [TABELA DE NOTAS FISCAIS]
WHERE DATA = '20170101'

--DESAFIO: Qual foi a maior venda do produto "Linha Refrescante - 1 Litro - Morango/Limão", em quantidade?
SELECT * FROM [TABELA DE PRODUTOS]
WHERE [NOME DO PRODUTO] = 'Linha Refrescante - 1 Litro - Morango/Limão'

SELECT * FROM [TABELA DE ITENS NOTAS FISCAIS]
WHERE [CODIGO DO PRODUTO] = '1101035'
ORDER BY QUANTIDADE DESC

SELECT MAX(QUANTIDADE) FROM [TABELA DE ITENS NOTAS FISCAIS]
WHERE [CODIGO DO PRODUTO] = '1101035'

SELECT [CODIGO DO PRODUTO], MAX(QUANTIDADE) AS 'QTD_MAX' FROM [TABELA DE ITENS NOTAS FISCAIS]
WHERE [CODIGO DO PRODUTO] = '1101035'
GROUP BY [CODIGO DO PRODUTO]

--DESAFIO: Aproveitando o desafio anterior, quantos itens de venda existem com a maior quantidade de venda para o produto '1101035'?
SELECT * FROM [TABELA DE ITENS NOTAS FISCAIS]

SELECT * FROM [TABELA DE ITENS NOTAS FISCAIS]
WHERE [CODIGO DO PRODUTO] = '1101035'

SELECT COUNT(*) FROM [TABELA DE ITENS NOTAS FISCAIS]
WHERE [CODIGO DO PRODUTO] = '1101035'

--DESAFIO HAVING: Quais são os clientes que fizeram mais de 2000 compras em 2016?
SELECT * FROM [TABELA DE CLIENTES]
SELECT * FROM [TABELA DE NOTAS FISCAIS]

SELECT C.NOME, C.CPF, NF.NUMERO FROM [TABELA DE CLIENTES]C
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON C.CPF = NF.CPF

SELECT C.NOME, C.CPF, YEAR(NF.[DATA]) AS 'ANO', COUNT(NF.NUMERO) AS 'TOTAL DE NOTAS' FROM [TABELA DE CLIENTES]C
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON C.CPF = NF.CPF
WHERE YEAR(NF.[DATA]) = 2016
GROUP BY C.NOME, C.CPF,YEAR(NF.[DATA])
HAVING COUNT(NF.NUMERO) >= 2000
ORDER BY C.NOME

SELECT CPF, COUNT(*) AS 'QTD. DE COMPRAS' FROM [TABELA DE NOTAS FISCAIS]
WHERE YEAR(DATA) = 2016
GROUP BY CPF
HAVING COUNT(*) > 2000

--DESAFIO CASE:
/*Veja o ano de nascimento dos clientes e classifique-os como: nascidos
antes de 1990 são adultos, nascidos entre 1990 e 1995 são jovens e
nascidos depois de 1995 são crianças.

Liste o nome do cliente e esta classificação.*/

SELECT NOME, YEAR([DATA DE NASCIMENTO]) AS 'ANO DE NASCIMENTO',
	CASE
		WHEN YEAR([DATA DE NASCIMENTO]) < 1990 THEN 'ADULTOS'
		WHEN YEAR([DATA DE NASCIMENTO]) >= 1990 AND YEAR([DATA DE NASCIMENTO]) <= 1995 THEN 'JOVENS'
		WHEN YEAR([DATA DE NASCIMENTO]) > 1995 THEN 'CRIANÇAS'
	END 'CLASSIFICAÇÃO ETÁRIA'
FROM [TABELA DE CLIENTES]





-------------------------------------------------AULA 09------------------------------------------------------------------------

--JOIN
--DESAFIO: Obtenha o faturamento anual da empresa. Leve em consideração que o valor financeiro das vendas consiste em 
--multiplicar a quantidade pelo preço.

SELECT TOP(1) * FROM [TABELA DE NOTAS FISCAIS]
SELECT TOP(1) * FROM [TABELA DE ITENS NOTAS FISCAIS]
SELECT COUNT(*) FROM [TABELA DE ITENS NOTAS FISCAIS]

--Minha query
SELECT YEAR(NF.DATA) AS 'ANO',
	   FORMAT((ROUND(SUM(INF.QUANTIDADE*INF.PREÇO),2)), 'R$ ###,###.##', 'PT-BR') AS 'FATURAMENTO ANUAL'
FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON NF.NUMERO = INF.NUMERO
GROUP BY YEAR(NF.DATA)
ORDER BY YEAR(NF.DATA) ASC
--Query do Professor
SELECT YEAR(DATA) AS 'ANO', SUM (QUANTIDADE * [PREÇO]) AS FATURAMENTO FROM [TABELA DE NOTAS FISCAIS] NF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS] INF
ON NF.NUMERO = INF.NUMERO
GROUP BY YEAR(DATA)

--LEFT JOIN, RIGHT JOIN, FULL JOIN e CROSS JOIN
---ESTUDAR EXEMPLOS...
SELECT * FROM [TABELA DE CLIENTES]
SELECT * FROM [TABELA DE NOTAS FISCAIS]

/*Na consulta abaixo podemos verificar que o cliente Fábio Carvalho não efetuou compra alguma.*/
SELECT C.NOME, COUNT(NF.NUMERO) FROM [TABELA DE NOTAS FISCAIS]NF
RIGHT JOIN [TABELA DE CLIENTES]C
ON C.CPF = NF.CPF
GROUP BY C.NOME


--UNION
SELECT * FROM [TABELA DE CLIENTES]

SELECT DISTINCT BAIRRO AS 'BAIRRO CLIENTE' FROM [TABELA DE CLIENTES]
SELECT DISTINCT BAIRRO AS 'BAIRRO VENDEDORES' FROM [TABELA DE VENDEDORES]


SELECT  BAIRRO AS 'BAIRRO' FROM [TABELA DE CLIENTES]
UNION 
SELECT  BAIRRO AS 'BAIRRO' FROM [TABELA DE VENDEDORES]


SELECT  BAIRRO AS 'BAIRRO' FROM [TABELA DE CLIENTES]
UNION ALL
SELECT  BAIRRO AS 'BAIRRO' FROM [TABELA DE VENDEDORES]


SELECT  BAIRRO, [DATA DE NASCIMENTO] FROM [TABELA DE CLIENTES]
UNION ALL
SELECT  BAIRRO, NOME FROM [TABELA DE VENDEDORES]

SELECT  BAIRRO, NOME FROM [TABELA DE CLIENTES]
UNION
SELECT  BAIRRO, NOME FROM [TABELA DE VENDEDORES]

SELECT  BAIRRO, NOME FROM [TABELA DE CLIENTES]
UNION ALL
SELECT  BAIRRO, NOME FROM [TABELA DE VENDEDORES]

--- um pouco de constantes ------
SELECT 'TESTE' AS 'COLUNA'

SELECT 1 AS 'TESTE'

SELECT 'TESTE' AS 'COLUNA', BAIRRO, NOME  FROM [TABELA DE CLIENTES]


SELECT BAIRRO, NOME, 'CLIENTE' AS 'CLIENTE/VENDEDOR' FROM [TABELA DE CLIENTES]
UNION ALL
SELECT  BAIRRO, NOME, 'VENDEDOR' FROM [TABELA DE VENDEDORES]
ORDER BY 3 DESC -- O número 3 indica a coluna que será usada na ordenação.


----------SUBCONSULTAS----------

SELECT NOME, BAIRRO FROM [TABELA DE CLIENTES]

SELECT BAIRRO FROM [TABELA DE VENDEDORES]

SELECT NOME, BAIRRO FROM [TABELA DE CLIENTES]
WHERE BAIRRO IN (SELECT BAIRRO FROM [TABELA DE VENDEDORES])

select * from [TABELA DE PRODUTOS]

SELECT EMBALAGEM, MAX([PRECO DE LISTA]) AS 'PRECO MAXIMO POR EMBALAGEM' FROM [TABELA DE PRODUTOS]
GROUP BY EMBALAGEM

SELECT EMBALAGEM, MAX([PRECO DE LISTA]) AS 'PRECO MAXIMO POR EMBALAGEM' FROM [TABELA DE PRODUTOS]
GROUP BY EMBALAGEM
HAVING MAX([PRECO DE LISTA])<5

SELECT A.EMBALAGEM,A.[PRECO MAXIMO POR EMBALAGEM] FROM (SELECT EMBALAGEM, MAX([PRECO DE LISTA]) AS 'PRECO MAXIMO POR EMBALAGEM' FROM [TABELA DE PRODUTOS]
GROUP BY EMBALAGEM) A 
WHERE A.[PRECO MAXIMO POR EMBALAGEM]<=5

select * from [TABELA DE PRODUTOS]

select [NOME DO PRODUTO], SABOR FROM [TABELA DE PRODUTOS]
WHERE SABOR IN ('UVA', 'LARANJA')

--DESAFIO: Qual seria a consulta, usando subconsulta, que seria equivalente a:

SELECT CPF, COUNT(*) FROM [TABELA DE NOTAS FISCAIS]
WHERE YEAR(DATA) = 2016
GROUP BY CPF
HAVING COUNT(*) > 2000

SELECT X.CPF, X.CONTAGEM
FROM (SELECT CPF, COUNT(*) AS 'CONTAGEM' FROM [TABELA DE NOTAS FISCAIS]
	  WHERE YEAR(DATA) = 2016
	  GROUP BY CPF) X
WHERE X.CONTAGEM > 2000


--Visão

-- criamos essa view pelo assitente 
SELECT * FROM [VW_EMBALAGEM]

--CRIACAO POR SQL
CREATE VIEW VW_TESTE AS 
		
	SELECT EMBALAGEM, MAX([PRECO DE LISTA]) AS 'PRECO MAXIMO POR EMBALAGEM' 
	FROM [TABELA DE PRODUTOS]
	GROUP BY EMBALAGEM

--SELECT NA VIEW TESTE
SELECT * FROM VW_TESTE




---------------------------------------------------------------AULA 10--------------------------------------------------------

--FUNÇÕES DO SQLSERVER

-- LTRIM
SELECT ('           OLA') as 'CAMPO'

SELECT LTRIM('      OLA') as 'CAMPO'

--RTRIM
SELECT RTRIM ('OLA           ') AS 'CAMPO'

--REPLACE
SELECT REPLACE (TRIM ('                         MARCIO LADISLAU'         ),' ','')

--CONCAT
SELECT CONCAT('OLA ','MUNDO') AS 'CAMPO'

SELECT 'OLA ' + 'MUNDO'

--LEFT
SELECT LEFT ('AVENIDA EDUARDO RIBEIRO',7) AS 'CAMPO'

--RIGHT
SELECT RIGHT ('AVENIDA EDUARDO RIBEIRO',7) AS 'CAMPO'

--LOWER
SELECT LOWER('AVENIDA EDUARDO RIBEIRO') AS 'CAMPO'

--UPPER
SELECT UPPER ('avenida eduardo ribeiro') AS 'CAMPO'

--REPLACE
SELECT REPLACE ('AVENIDA EDUARDO RIBEIRO','AVENIDA','RUA') AS 'CAMPO'

--SUBSTRING
SELECT SUBSTRING ('AVENIDA EDUARDO RIBEIRO',1,7) AS CAMPO

SELECT SUBSTRING ('AVENIDA EDUARDO RIBEIRO',9,7) AS CAMPO

--LEN
SELECT LEN ('AVENIDA EDUARDO RIBEIRO') AS 'CAMPO'

--TESTANDO NA TABELA
SELECT * FROM [TABELA DE CLIENTES]

SELECT CONCAT(NOME, ' (',CPF,')') AS 'CAMPO TESTE' FROM [TABELA DE CLIENTES]
--DESAFIO
/*Faça uma consulta que lista o nome do cliente e o endereço completo
(com rua, bairro, cidade e estado).*/
SELECT * FROM [TABELA DE CLIENTES]

SELECT NOME, CONCAT(ENDERECO, ', ', BAIRRO, ', ', CIDADE, ', ', ESTADO)AS 'ENDEREÇO'
FROM [TABELA DE CLIENTES]

--FUNÇOES DE DATA

SELECT SYSDATETIME()

SELECT SYSDATETIMEOFFSET()

SELECT SYSUTCDATETIME()

SELECT CURRENT_TIMESTAMP

SELECT GETDATE()

SELECT GETUTCDATE()


--ALGUMAS FUNÇÕES

SELECT DATENAME(YEAR,GETDATE()) --APENAS O ANO
SELECT GETDATE() --ANO-MES-DIA com HH:MM:SS.MCSG
SELECT DATENAME(MICROSECOND,GETDATE()) --APENAS MICROSEGUNDO
SELECT DATENAME(MINUTE,GETDATE()) --APENAS O MINUTO
SELECT DATENAME(MONTH,GETDATE()) --apenas o NOME do mÊs
SELECT DATENAME(WEEKDAY,GETDATE()) --apenas o dia da semana
SELECT DATEPART(MONTH,GETDATE()) --apenas o numérico do mês
SELECT DAY(GETDATE()) --apenas o dia
SELECT YEAR(GETDATE()) --apenas o dia

SELECT DATEFROMPARTS(2020,5,24) --os dados da data são especifícados como parâmetro
SELECT DATENAME(MONTH,DATEFROMPARTS(2020,5,1))
SELECT DATEDIFF(YEAR, DATEFROMPARTS(2019,9,1), GETDATE())

SELECT DATEADD(MONTH, 7, GETDATE())
SELECT DATEADD(YEAR, 5, GETDATE())

SELECT ISDATE('2018-01-01')
SELECT ISDATE('2018-25-28')

SELECT * FROM [TABELA DE NOTAS FISCAIS]
SELECT * FROM [TABELA DE ITENS NOTAS FISCAIS]

SELECT DATA, CONCAT(DATENAME(DAY,DATA),' de ',DATENAME(MONTH,DATA),' de ', DATENAME(YEAR,DATA)) AS 'DATA 2' 
FROM [TABELA DE NOTAS FISCAIS] 

--DESAFIO: Crie uma consulta que mostre o nome e a idade dos clientes.

SELECT * FROM [TABELA DE CLIENTES]

SELECT NOME, DATEDIFF(YEAR, [DATA DE NASCIMENTO], GETDATE()) AS	'IDADE' FROM [TABELA DE CLIENTES]
SELECT NOME, CONCAT(DATEDIFF(YEAR, [DATA DE NASCIMENTO], GETDATE()), ' anos') AS	'IDADE' FROM [TABELA DE CLIENTES]


SELECT CEILING(7.333223)

SELECT FLOOR(7.333223)

select 2 * rand()

SELECT 3* RAND()

SELECT ROUND(7.33323323, 2)

SELECT * FROM [TABELA DE ITENS NOTAS FISCAIS]

SELECT [QUANTIDADE], [PRECO], ROUND(([QUANTIDADE] * [PRECO]),1) FROM [TABELA DE ITENS NOTAS FISCAIS]


-- DESAFIO 03  DA AULA 10 ---------------------

SELECT YEAR(DATA) AS 'ANO', FLOOR(SUM(IMPOSTO * (QUANTIDADE * PRECO))) AS 'IMPOSTO PAGO' 
FROM [TABELA DE NOTAS FISCAIS] NF
INNER JOIN  [TABELA DE ITENS NOTAS FISCAIS]INF 
ON NF.NUMERO = INF.NUMERO
WHERE YEAR(DATA) = 2016
GROUP BY YEAR(DATA)

------------ CONVERSÃO DE DADOS ------------

SELECT CONVERT(VARCHAR, GETDATE(), 101)
SELECT CONVERT(VARCHAR, GETDATE(), 113)
SELECT CONVERT(VARCHAR, GETDATE(), 130)

SELECT CONVERT(decimal(10,5), 193.57)

SELECT * FROM [TABELA DE PRODUTOS]

-- ERRO EXEMPLO
SELECT 'O preço do produto ' + [NOME DO PRODUTO] + ' é ' +  [PRECO DE LISTA] 
from [TABELA DE PRODUTOS]

SELECT 'O preço do produto ' + [NOME DO PRODUTO] + ' é ' + 'R$ ' + CONVERT(VARCHAR, [PRECO DE LISTA])
from [TABELA DE PRODUTOS]

SELECT CONCAT ('PRECO DE LISTA: ',[PRECO DE LISTA]) FROM [TABELA DE PRODUTOS]

---------- FUNCOES NUMERICAS ------------

SELECT CEILING(7.333223)
SELECT FLOOR(7.333223)

select 2 * RAND()
SELECT 3 * RAND()

SELECT ROUND(7.33323323, 2)

SELECT * FROM [TABELA DE PRODUTOS] --31 LINHAS

SELECT * FROM [TABELA DE ITENS NOTAS FISCAIS] --213364 LINHAS

SELECT DISTINCT [CODIGO DO PRODUTO] FROM [TABELA DE ITENS NOTAS FISCAIS] --30 LINHAS. Comparando à tabela de produtos, pode-se concluir que 1 item não foi vendido.

SELECT [CODIGO DO PRODUTO], [NOME DO PRODUTO] FROM [TABELA DE PRODUTOS]
WHERE [CODIGO DO PRODUTO] NOT IN (SELECT [CODIGO DO PRODUTO] FROM [TABELA DE ITENS NOTAS FISCAIS]) --O resultado da query mostra que o produto de cód. 838819 não foi vendido.

SELECT [QUANTIDADE], [PREÇO], ROUND(([QUANTIDADE] * [PREÇO]),2) FROM [TABELA DE ITENS NOTAS FISCAIS]

--Minha query
--Todos os itens
SELECT [CODIGO DO PRODUTO], FORMAT(ROUND(SUM(QUANTIDADE*PREÇO), 2), '###,###.##') AS 'FATURADO'
FROM [TABELA DE ITENS NOTAS FISCAIS]
GROUP BY [CODIGO DO PRODUTO]

SELECT [CODIGO DO PRODUTO], SUM((QUANTIDADE*PREÇO)) AS 'FATURADO'
FROM [TABELA DE ITENS NOTAS FISCAIS]
WHERE [CODIGO DO PRODUTO] = '1101035'
GROUP BY [CODIGO DO PRODUTO]

--DESAFIO
/*Na tabela de notas fiscais, temos o valor do imposto. Já na tabela de itens,
temos a quantidade e o faturamento. Calcule o valor do imposto pago no
ano de 2016, arredondando para o menor inteiro.*/

SELECT * FROM [TABELA DE NOTAS FISCAIS]

SELECT * FROM [TABELA DE ITENS NOTAS FISCAIS]

SELECT YEAR(DATA) AS 'ANO',
	   FORMAT(SUM(INF.QUANTIDADE*INF.PREÇO), '###,###.##') AS 'FATURAMENTO ANUAL',
	   FORMAT(SUM(NF.IMPOSTO*INF.QUANTIDADE*INF.PREÇO), '###,###.##') AS 'IMPOSTO PAGO'
FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON NF.NUMERO = INF.NUMERO
WHERE YEAR(DATA) = '2016'
GROUP BY YEAR(DATA)

--PARA TODOS OS ANOS
SELECT YEAR(DATA) AS 'ANO',
	   FORMAT(SUM(INF.QUANTIDADE*INF.PREÇO), '###,###.##') AS 'FATURAMENTO ANUAL',
	   FORMAT(SUM(NF.IMPOSTO*INF.QUANTIDADE*INF.PREÇO), '###,###.##') AS 'IMPOSTO PAGO'
FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON NF.NUMERO = INF.NUMERO
GROUP BY YEAR(DATA)
ORDER BY YEAR(DATA)

SELECT FORMAT(SUM(QUANTIDADE*PREÇO), '###,###.##') AS 'FATURAMENTO TOTAL', 
	   FORMAT(SUM(NF.IMPOSTO*INF.QUANTIDADE*INF.PREÇO), '###,###.##') AS 'IMPOSTO TOTAL'
FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON NF.NUMERO = INF.NUMERO

--CAST(padrão SQL) e CONVERT(SQL Server)
/*DESAFIO: Queremos construir um SQL cujo resultado seja, para cada cliente:
"O cliente João da Silva comprou 120000 no ano de 2016".
Somente para o ano de 2016.*/

select count(*) from [TABELA DE CLIENTES]
SELECT top 1 * FROM [TABELA DE CLIENTES]
select top 1 * from [TABELA DE NOTAS FISCAIS]
select top 1 * from [TABELA DE ITENS NOTAS FISCAIS]

select c.nome, inf.quantidade*inf.preço from [TABELA DE CLIENTES]c
inner join [TABELA DE NOTAS FISCAIS]nf
on c.cpf = nf.cpf
inner join [TABELA DE ITENS NOTAS FISCAIS]inf
on inf.numero = nf.NUMERO
where year(nf.data) = 2016

--Query Final
select concat('O cliente ', c.nome, ' comprou ', format(round(sum(inf.quantidade*inf.preço),2), 'RS ###,###.##')) from [TABELA DE CLIENTES]c
inner join [TABELA DE NOTAS FISCAIS]nf
on c.cpf = nf.cpf
inner join [TABELA DE ITENS NOTAS FISCAIS]inf
on inf.numero = nf.NUMERO
where year(nf.data) = 2016
group by c.nome





--------------------------------------------------------------- AULA 11 --------------------------------------------------------------------------
--RELATÓRIO DE VENDAS VÁLIDAS
--NOME, ANO/MES, QUANTIDADE/MÊS, VOLUME COMPRA, STATUS VENDA

/* --RELATÓRIO PASSO A PASSO FEITO PELO PROFESSOR
SELECT TOP 1 * FROM [TABELA DE CLIENTES]
SELECT TOP 1 * FROM [TABELA DE NOTAS FISCAIS]
SELECT TOP 1 * FROM [TABELA DE ITENS NOTAS FISCAIS]

SELECT C.NOME,
	   CONCAT(YEAR(NF.DATA), '-', MONTH(NF.DATA)) AS 'MÊS ANO', --VERIFICAR MELHORAR A FORMA DE APRESENTAR ESSA DATA
	   SUM(INF.QUANTIDADE) AS 'QUANTIDADE/MÊS',
	   C.[VOLUME DE COMPRA]
FROM [TABELA DE CLIENTES]C
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON NF.CPF = C.CPF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO
GROUP BY C.NOME, CONCAT(YEAR(NF.DATA), '-', MONTH(NF.DATA)), C.[VOLUME DE COMPRA]
ORDER BY C.NOME, CONCAT(YEAR(NF.DATA), '-', MONTH(NF.DATA))

SELECT C.NOME,
	   CONVERT(VARCHAR, CONCAT(YEAR(NF.DATA), '-', MONTH(NF.DATA))) AS 'MÊS ANO', --VERIFICAR MELHORAR A FORMA DE APRESENTAR ESSA DATA
	   SUM(INF.QUANTIDADE) AS 'QUANTIDADE/MÊS',
	   C.[VOLUME DE COMPRA]
FROM [TABELA DE CLIENTES]C
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON NF.CPF = C.CPF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO
GROUP BY C.NOME, CONCAT(YEAR(NF.DATA), '-', MONTH(NF.DATA)), C.[VOLUME DE COMPRA]
ORDER BY C.NOME, CONCAT(YEAR(NF.DATA), '-', MONTH(NF.DATA))

SELECT DATEPART(YEAR, '2007-10-30 12:15:32.1234567 +05:10')
SELECT FORMAT(DATEPART(MONTH, '2007-08-30 12:15:32.1234567 +05:10'), '##')

--Query do Professor
--PASSO 1: RELATORIO DE VENDAS VALIDAS

SELECT * FROM [TABELA DE CLIENTES]

SELECT * FROM [TABELA DE ITENS NOTAS FISCAIS]

SELECT * FROM [TABELA DE NOTAS FISCAIS]

--PASSO 2:  FACO A UNIAO DAS TABELAS QUE TEM OS VALORES QUE EU QUERO
SELECT * FROM [TABELA DE NOTAS FISCAIS] NF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO


--PASSO 3:  PEGO SOMENTE OS CAMPOS QUE EU QUERO
SELECT NF.CPF, NF.DATA,INF.QUANTIDADE FROM [TABELA DE NOTAS FISCAIS] NF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO


--PASSO 4: CONVERTENDO A DATA PARA STRING
SELECT NF.CPF, CONVERT (VARCHAR,NF.DATA,120) AS 'DATA',INF.QUANTIDADE FROM [TABELA DE NOTAS FISCAIS] NF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO


--PASSO 5: USANDO SUBSTRING PARA PEGAR SOMENTE O ANO/MES
SELECT NF.CPF,SUBSTRING (CONVERT(VARCHAR,NF.DATA,120),1,7) AS 'ANO/MES',INF.QUANTIDADE FROM [TABELA DE NOTAS FISCAIS] NF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO




--PASSO 6: AGRUPANDO PARA TER QUANTIDADE POR CPF E MÊS 
SELECT NF.CPF,SUBSTRING (CONVERT(VARCHAR,NF.DATA,120),1,7) AS 'ANO/MES', SUM (INF.QUANTIDADE) AS 'QUANTIDADE MES' FROM [TABELA DE NOTAS FISCAIS] NF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO
GROUP BY NF.CPF, SUBSTRING (CONVERT(VARCHAR,NF.DATA,120),1,7)



--PASSO 7: PEGAR O NOME E VOLUME DE COMPRA DA TABELA DE CLIENTE
SELECT TC.NOME,TC.[VOLUME DE COMPRA] FROM [TABELA DE CLIENTES]TC






--PASSO 8: FAZENDO SUBQUERY DA CONSULTA 
SELECT * FROM
(SELECT NF.CPF,SUBSTRING(CONVERT (VARCHAR,NF.[DATA],103),4,10) AS 'MES/ANO', SUM (INF.QUANTIDADE) AS 'QUANTIDADE MES' FROM [TABELA DE NOTAS FISCAIS]NF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO
GROUP BY  NF.CPF,SUBSTRING(CONVERT (VARCHAR,NF.[DATA],103),4,10))CQ


--PASSO 9: APLICANDO INNER JOIN COM A TABELA DE CLIENTES
SELECT * FROM
(SELECT NF.CPF,SUBSTRING(CONVERT (VARCHAR,NF.[DATA],103),4,10) AS 'MES/ANO', SUM (INF.QUANTIDADE) AS 'QUANTIDADE MES' FROM [TABELA DE NOTAS FISCAIS]NF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO
GROUP BY  NF.CPF,SUBSTRING(CONVERT (VARCHAR,NF.[DATA],103),4,10))CQ
INNER JOIN [TABELA DE CLIENTES]TC
ON TC.CPF = CQ.CPF


--PASSO 10: SELECIONADO SOMENTE AS COLUNAS NECESSARIAS
SELECT TC.NOME,CQ.[ANO/MES], CQ.[QUANTIDADE MES],TC.[VOLUME DE COMPRA]
FROM
(SELECT NF.CPF,SUBSTRING (CONVERT(VARCHAR,NF.DATA,120),1,7) AS 'ANO/MES', SUM (INF.QUANTIDADE) AS 'QUANTIDADE MES' FROM [TABELA DE NOTAS FISCAIS] NF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO
GROUP BY NF.CPF, SUBSTRING (CONVERT(VARCHAR,NF.DATA,120),1,7))CQ --
INNER JOIN [TABELA DE CLIENTES]TC
ON TC.CPF = CQ.CPF



--PASSO 11: ELA VAI SER OUTRA SUBQUERY
--OBSERVEM O APELIDO PESSOAL

SELECT * FROM
(SELECT TC.NOME,CQ.[ANO/MES], CQ.[QUANTIDADE MES],TC.[VOLUME DE COMPRA]
FROM
(SELECT NF.CPF,SUBSTRING (CONVERT(VARCHAR,NF.DATA,120),1,7) AS 'ANO/MES', SUM (INF.QUANTIDADE) AS 'QUANTIDADE MES' FROM [TABELA DE NOTAS FISCAIS] NF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO
GROUP BY NF.CPF, SUBSTRING (CONVERT(VARCHAR,NF.DATA,120),1,7))CQ --
INNER JOIN [TABELA DE CLIENTES]TC
ON TC.CPF = CQ.CPF)AUX


--PASSO 12: PEGANDO SOMENTE O QUE EU QUERO JÁ COM O CASE EMBUTIDO NO SELECT

SELECT AUX.NOME,AUX.[MES/ANO],AUX.[QUANTIDADE MES],AUX.[VOLUME DE COMPRA],
CASE
	WHEN AUX.[QUANTIDADE MES] <= AUX.[VOLUME DE COMPRA] THEN 'VENDA VÁLIDA'
	ELSE 'VENDA INVALIDA' 

END AS 'STATUS DE VENDA'
FROM
(SELECT TC.NOME,CQ.[MES/ANO], CQ.[QUANTIDADE MES],TC.[VOLUME DE COMPRA]
FROM
(SELECT NF.CPF,SUBSTRING(CONVERT (VARCHAR,NF.[DATA],103),4,10) AS 'MES/ANO', SUM (INF.QUANTIDADE) AS 'QUANTIDADE MES' FROM [TABELA DE NOTAS FISCAIS]NF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO
GROUP BY  NF.CPF,SUBSTRING(CONVERT (VARCHAR,NF.[DATA],103),4,10))CQ
INNER JOIN [TABELA DE CLIENTES]TC
ON TC.CPF = CQ.CPF)AUX



--PASSO 13: ORDANANDO PELO ORDER BY PELO NOME E MES/ANO
SELECT AUX.NOME,AUX.[MES/ANO],AUX.[QUANTIDADE MES],AUX.[VOLUME DE COMPRA],
CASE
	WHEN AUX.[QUANTIDADE MES] <= AUX.[VOLUME DE COMPRA] THEN 'VENDA VÁLIDA'
	ELSE 'VENDA INVALIDA' 

END AS 'STATUS DE VENDA'
FROM
(SELECT TC.NOME,CQ.[MES/ANO], CQ.[QUANTIDADE MES],TC.[VOLUME DE COMPRA]
FROM
(SELECT NF.CPF,SUBSTRING(CONVERT (VARCHAR,NF.[DATA],103),4,10) AS 'MES/ANO', SUM (INF.QUANTIDADE) AS 'QUANTIDADE MES' FROM [TABELA DE NOTAS FISCAIS]NF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON NF.NUMERO = INF.NUMERO
GROUP BY  NF.CPF,SUBSTRING(CONVERT (VARCHAR,NF.[DATA],103),4,10))CQ
INNER JOIN [TABELA DE CLIENTES]TC
ON TC.CPF = CQ.CPF)AUX
ORDER BY AUX.NOME, AUX.[MES/ANO]
*/

--RELATÓRIO DE VENDAS VÁLIDAS
--NOME, ANO/MES, QUANTIDADE/MÊS, VOLUME COMPRA, STATUS VENDA
--Minha query
SELECT TOP 1 * FROM [TABELA DE CLIENTES]
SELECT TOP 1 * FROM [TABELA DE NOTAS FISCAIS]
SELECT TOP 1 * FROM [TABELA DE ITENS NOTAS FISCAIS]

SELECT C.NOME,
	   NF.DATA, 
	   INF.QUANTIDADE, 
	   C.[VOLUME DE COMPRA]
FROM [TABELA DE CLIENTES]C
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON C.CPF = NF.CPF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON INF.NUMERO = NF.NUMERO

SELECT C.NOME,
	   SUBSTRING(CONVERT(VARCHAR,NF.DATA,103), 4, 8) AS 'MÊS/ANO', 
	   SUM(INF.QUANTIDADE) AS 'QTD. COMPRADA', 
	   C.[VOLUME DE COMPRA]
FROM [TABELA DE CLIENTES]C
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON C.CPF = NF.CPF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON INF.NUMERO = NF.NUMERO
GROUP BY C.NOME, SUBSTRING(CONVERT(VARCHAR,NF.DATA,103), 4, 8), C.[VOLUME DE COMPRA]
ORDER BY NOME

--Minha query final
SELECT C.NOME,
	   SUBSTRING(CONVERT(VARCHAR,NF.DATA,103), 4, 8) AS 'MÊS/ANO', 
	   SUM(INF.QUANTIDADE) AS 'QTD. COMPRADA', 
	   C.[VOLUME DE COMPRA],
	   CASE
	       WHEN SUM(INF.QUANTIDADE) <= C.[VOLUME DE COMPRA] THEN 'VENDA VÁLIDA'
		   WHEN SUM(INF.QUANTIDADE) > C.[VOLUME DE COMPRA] THEN 'VENDA INVÁLIDA'
	   END AS 'STATUS DA VENDA'
FROM [TABELA DE CLIENTES]C
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON C.CPF = NF.CPF
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON INF.NUMERO = NF.NUMERO
GROUP BY C.NOME, SUBSTRING(CONVERT(VARCHAR,NF.DATA,103), 4, 8), C.[VOLUME DE COMPRA]
ORDER BY NOME, SUBSTRING(CONVERT(VARCHAR,NF.DATA,103), 4, 8)

/*O dono da Esquina do Suco pediu para que criasse um relatório mostrando qual foi o faturamento em
dinheiro por sabor de produto e também que comparasse a participação daquela venda em relação ao
total (%). Somente no ano de 2016*/

--FATURAMENTO/SABOR
--% DA VENDA EM RELAÇÃO AO TOTAL


--Minha Query
SELECT TOP 1 * FROM [TABELA DE PRODUTOS]
SELECT DISTINCT SABOR FROM [TABELA DE PRODUTOS]
SELECT TOP 1 * FROM [TABELA DE NOTAS FISCAIS]
SELECT TOP 1 * FROM [TABELA DE ITENS NOTAS FISCAIS]


SELECT P.SABOR,
	   YEAR(NF.DATA) AS 'ANO',
	   FORMAT(ROUND(CONVERT(FLOAT,SUM(INF.QUANTIDADE*INF.PREÇO)),2), 'C', 'PT-BR') AS 'FATURAMENTO'
FROM [TABELA DE PRODUTOS]P
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON P.[CODIGO DO PRODUTO] = INF.[CODIGO DO PRODUTO]
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA) = 2016
GROUP BY P.SABOR, YEAR(NF.DATA)

SELECT YEAR(NF.DATA) AS 'ANO',
	   FORMAT(ROUND(CONVERT(FLOAT,SUM(INF.QUANTIDADE*INF.PREÇO)),2), 'C', 'PT-BR') AS 'FATURAMENTO ANUAL'
FROM [TABELA DE PRODUTOS]P
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON P.[CODIGO DO PRODUTO] = INF.[CODIGO DO PRODUTO]
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA) = 2016
GROUP BY YEAR(NF.DATA)

SELECT * FROM
(
SELECT P.SABOR,
	   YEAR(NF.DATA) AS 'ANO',
	   FORMAT(ROUND(CONVERT(FLOAT,SUM(INF.QUANTIDADE*INF.PREÇO)),2), 'C', 'PT-BR') AS 'FATURAMENTO'
FROM [TABELA DE PRODUTOS]P
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON P.[CODIGO DO PRODUTO] = INF.[CODIGO DO PRODUTO]
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA) = 2016
GROUP BY P.SABOR, YEAR(NF.DATA)
)TAB1
INNER JOIN
(
SELECT YEAR(NF.DATA) AS 'ANO',
	   FORMAT(ROUND(CONVERT(FLOAT,SUM(INF.QUANTIDADE*INF.PREÇO)),2), 'C', 'PT-BR') AS 'FATURAMENTO ANUAL'
FROM [TABELA DE PRODUTOS]P
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
ON P.[CODIGO DO PRODUTO] = INF.[CODIGO DO PRODUTO]
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA) = 2016
GROUP BY YEAR(NF.DATA)
)TAB2
ON TAB1.ANO = TAB2.ANO

--Query Final para filtrar por ANO (nesse caso, ano de 2016)
SELECT TAB1.SABOR,
       TAB1.ANO,
	   TAB1.FATURAMENTO,
	   ROUND(((TAB1.FATURAMENTO/TAB2.[FATURAMENTO ANUAL])*100),2) AS 'PARTICIPAÇÃO (%)'
FROM   (
		SELECT P.SABOR,
		YEAR(NF.DATA) AS 'ANO',
		ROUND(CONVERT(FLOAT,SUM(INF.QUANTIDADE*INF.PREÇO)),2) AS 'FATURAMENTO'
		FROM [TABELA DE PRODUTOS]P
		INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
		ON P.[CODIGO DO PRODUTO] = INF.[CODIGO DO PRODUTO]
		INNER JOIN [TABELA DE NOTAS FISCAIS]NF
		ON NF.NUMERO = INF.NUMERO
		WHERE YEAR(NF.DATA) = 2016
		GROUP BY P.SABOR, YEAR(NF.DATA)
		)TAB1
INNER JOIN
		(
		SELECT YEAR(NF.DATA) AS 'ANO',
			   ROUND(CONVERT(FLOAT,SUM(INF.QUANTIDADE*INF.PREÇO)),2) AS 'FATURAMENTO ANUAL'
		FROM [TABELA DE PRODUTOS]P
		INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
		ON P.[CODIGO DO PRODUTO] = INF.[CODIGO DO PRODUTO]
		INNER JOIN [TABELA DE NOTAS FISCAIS]NF
		ON NF.NUMERO = INF.NUMERO
		WHERE YEAR(NF.DATA) = 2016
		GROUP BY YEAR(NF.DATA)
		)TAB2
ON TAB1.ANO = TAB2.ANO

--Query Final para filtrar pelo peróiodo total
SELECT TAB1.SABOR,
       TAB1.ANO,
	   TAB1.FATURAMENTO,
	   ROUND(((TAB1.FATURAMENTO/TAB2.[FATURAMENTO ANUAL])*100),2) AS 'PARTICIPAÇÃO (%)'
FROM   (
		SELECT P.SABOR,
		YEAR(NF.DATA) AS 'ANO',
		ROUND(CONVERT(FLOAT,SUM(INF.QUANTIDADE*INF.PREÇO)),2) AS 'FATURAMENTO'
		FROM [TABELA DE PRODUTOS]P
		INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
		ON P.[CODIGO DO PRODUTO] = INF.[CODIGO DO PRODUTO]
		INNER JOIN [TABELA DE NOTAS FISCAIS]NF
		ON NF.NUMERO = INF.NUMERO
		GROUP BY P.SABOR, YEAR(NF.DATA)
		)TAB1
INNER JOIN
		(
		SELECT YEAR(NF.DATA) AS 'ANO',
			   ROUND(CONVERT(FLOAT,SUM(INF.QUANTIDADE*INF.PREÇO)),2) AS 'FATURAMENTO ANUAL'
		FROM [TABELA DE PRODUTOS]P
		INNER JOIN [TABELA DE ITENS NOTAS FISCAIS]INF
		ON P.[CODIGO DO PRODUTO] = INF.[CODIGO DO PRODUTO]
		INNER JOIN [TABELA DE NOTAS FISCAIS]NF
		ON NF.NUMERO = INF.NUMERO
		GROUP BY YEAR(NF.DATA)
		)TAB2
ON TAB1.ANO = TAB2.ANO


--Desenvolvimento do Professor
--PASSO1: PEGANDO AS TABELAS 
SELECT * FROM [TABELA DE PRODUTOS]

SELECT * FROM [TABELA DE NOTAS FISCAIS]

SELECT * FROM [TABELA DE ITENS NOTAS FISCAIS]


--PASSO 2: PEGANDO OS CAMPOS
SELECT TP.SABOR FROM [TABELA DE PRODUTOS]TP

SELECT NF.DATA FROM [TABELA DE NOTAS FISCAIS]NF

SELECT (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF


--PASSO 3: JUNTANDO AS TABELAS
SELECT TP.SABOR, NF.DATA,(INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]


--PASSO 4: FILTRANDO PELA DATA E DANDO NOME AS COLUNAS 
SELECT TP.SABOR, YEAR (NF.DATA) AS 'ANO', (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016



--PASSO 5: AGRUPANDO
SELECT TP.SABOR, YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY TP.SABOR, YEAR (NF.DATA)


-- PASSO 6: AGRUPANDO O FATURAMENTO ANUAL (TIRO O CAMPO SABOR) 
SELECT  YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY YEAR (NF.DATA)




--SELECT'CAMPO1' ,'CAMPO2' FROM [TABELA DE PRODUTOS]

--PASSO 7: INNER JOIN NAS DUAS CONSULTAS 
SELECT * FROM
(SELECT TP.SABOR, YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY TP.SABOR, YEAR (NF.DATA))AUX1

INNER JOIN 

(SELECT  YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY YEAR (NF.DATA))AUX2

ON AUX1.ANO = AUX2.ANO




-- PASSO 8: MUDANDO O NOME DO FATURAMENTO DO AUX2 PARA 'FATURAMENTO ANUAL'
SELECT AUX1.SABOR, AUX1.ANO,AUX1.FATURAMENTO,AUX2.[FATURAMENTO ANUAL] FROM
(SELECT TP.SABOR, YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY TP.SABOR, YEAR (NF.DATA))AUX1
INNER JOIN (SELECT  YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO ANUAL' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY YEAR (NF.DATA))AUX2
ON AUX1.ANO = AUX2.ANO


-- PASSO 9: CRIANDO O PERCENTUAL

SELECT AUX1.SABOR, AUX1.ANO,AUX1.FATURAMENTO,(AUX1.FATURAMENTO/AUX2.[FATURAMENTO ANUAL])*100 AS 'PERCENTUAL' FROM
(SELECT TP.SABOR, YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY TP.SABOR, YEAR (NF.DATA))AUX1
INNER JOIN (SELECT  YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO ANUAL' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY YEAR (NF.DATA))AUX2
ON AUX1.ANO = AUX2.ANO



--PASSO 10: ORDENANDO PELO FATURAMENTO (AUX1)
SELECT AUX1.SABOR, AUX1.ANO,AUX1.FATURAMENTO,(AUX1.FATURAMENTO/AUX2.[FATURAMENTO ANUAL])*100 AS 'PERCENTUAL' FROM
(SELECT TP.SABOR, YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY TP.SABOR, YEAR (NF.DATA))AUX1
INNER JOIN (SELECT  YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO ANUAL' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY YEAR (NF.DATA))AUX2
ON AUX1.ANO = AUX2.ANO
ORDER BY AUX1.FATURAMENTO DESC


--PASSO 11: CONVERTENDO E ARRENDONDANDO CAMPOS (FINALIZANDO O RELATÓRIO)

SELECT AUX1.SABOR, AUX1.ANO,ROUND (AUX1.FATURAMENTO,2) AS 'FATURAMENTO', CONVERT(VARCHAR,ROUND((AUX1.FATURAMENTO/AUX2.[FATURAMENTO ANUAL])*100,2))+' %' AS 'PERCENTUAL' FROM
(SELECT TP.SABOR, YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY TP.SABOR, YEAR (NF.DATA))AUX1
INNER JOIN (SELECT  YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO ANUAL' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY YEAR (NF.DATA))AUX2
ON AUX1.ANO = AUX2.ANO
ORDER BY AUX1.FATURAMENTO DESC



SELECT AUX1.SABOR, AUX1.ANO, FORMAT(CONVERT(DECIMAL(15,2),AUX1.FATURAMENTO),'C','PT-BR') AS 'FATURAMENTO', CONVERT(VARCHAR,ROUND((AUX1.FATURAMENTO/AUX2.[FATURAMENTO ANUAL])*100,2))+' %' AS 'PERCENTUAL' FROM
(SELECT TP.SABOR, YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY TP.SABOR, YEAR (NF.DATA))AUX1
INNER JOIN (SELECT  YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO ANUAL' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY YEAR (NF.DATA))AUX2
ON AUX1.ANO = AUX2.ANO
ORDER BY AUX1.FATURAMENTO DESC



--OUTRA RESPOSTA COM O FORMAT PARA MOEDA E COM DUAS CASAS DECIMAIS E COM DECIMAL APARECENDO O ZERO NA FORMATACAO DO DECIMAL 'X,10'
--DA DOCUMENTACAO MICROSOFT SOBRE O FORMAT 
 			-- FORMAT(<O NUMERO AQUI>, 'N', 'PT-BR') AS 'Number Format' (FORMATO NUMERICO)
            -- FORMAT(<O NUMERO AQUI>, 'G', 'PT-BR') AS 'General Format'  (FORMATO GERAL)
            -- FORMAT<(O NUMERO AQUI>, 'C', 'PT-BR') AS 'Currency Format'  (FORMATO MOEDA)


SELECT AUX1.SABOR, AUX1.ANO, FORMAT(AUX1.FATURAMENTO,'C','PT-BR') AS 'FATURAMENTO', CONVERT(VARCHAR,ROUND((AUX1.FATURAMENTO/AUX2.[FATURAMENTO ANUAL])*100,2))+' %' AS 'PERCENTUAL' FROM
(SELECT TP.SABOR, YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY TP.SABOR, YEAR (NF.DATA))AUX1
INNER JOIN (SELECT  YEAR (NF.DATA) AS 'ANO', SUM (INF.QUANTIDADE * INF.PREÇO) AS 'FATURAMENTO ANUAL' FROM [TABELA DE ITENS NOTAS FISCAIS]INF
INNER JOIN [TABELA DE NOTAS FISCAIS]NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS]TP
ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR (NF.DATA) = 2016
GROUP BY YEAR (NF.DATA))AUX2
ON AUX1.ANO = AUX2.ANO
ORDER BY AUX1.FATURAMENTO DESC




               
































